{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/TableHeaderRow/TableHeaderRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","helpers/api.ts","components/NotFoundPage/NotFoundPage.tsx","components/PeopleFilter/PeopleFilter.tsx","helpers/debounce.ts","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["HomePage","PersonName","person","className","ClassNames","sex","to","slug","onClick","id","element","document","getElementById","scrollIntoView","behavior","block","handleClickOnName","name","PersonRow","personSex","useParams","born","died","motherName","mother","fatherName","father","TableHeaderRow","headers","map","header","key","PeopleTable","people","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","location","useLocation","filterQuery","URLSearchParams","search","get","useEffect","a","fetch","then","response","json","peopleFromServer","modifiedPeople","find","getPeopleFromServer","visiblePeople","useMemo","filter","toLowerCase","includes","filterPeople","NotFoundPage","PeopleFilter","history","useHistory","searchParams","query","currentQuery","setCurrentQuery","updateQuery","useCallback","func","delay","timerId","clearTimeout","args","setTimeout","debounce","set","delete","replace","push","toString","type","value","onChange","event","target","placeholder","Header","exact","path","component","App","NotFondPage","from","ReactDOM","render"],"mappings":"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","file":"static/js/main.3dc0b3be.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n  <h1>\n    Home page\n  </h1>\n)\n\nexport default HomePage;\n","import React from 'react';\nimport { ModifiedPerson } from '../../helpers/api';\nimport { Link } from 'react-router-dom';\nimport ClassNames from 'classnames';\nimport './PersonName.css';\n\ntype Props = {\n  person: ModifiedPerson;\n}\n\nconst PersonName:React.FC<Props> = ({ person }) => {\n  const handleClickOnName = (id: string) => {\n    const element = document.getElementById(id);\n    element?.scrollIntoView({behavior: \"smooth\", block: \"center\"});\n  }\n\n  return (\n    <Link\n      className={ClassNames('person__name',\n        {'person__name--female': person.sex === 'f'},\n        {'person__name--male': person.sex === 'm'}\n      )}\n      to={`/people/${person.slug}`}\n      onClick={() => handleClickOnName(person.slug)}\n    >\n      {person.name}\n    </Link>\n  )\n}\n\nexport default PersonName;\n","import React from 'react';\nimport { ModifiedPerson } from '../../helpers/api';\nimport ClassNames from 'classnames';\nimport './PersonRow.css';\nimport PersonName from '../PersonName/PersonName';\nimport { useParams } from 'react-router-dom';\n\ntype Props = {\n  person: ModifiedPerson;\n}\n\nconst PersonRow:React.FC<Props> = ({ person }) => {\n  const personSex = person.sex === 'm' ? 'male' : 'female';\n  const { slug } = useParams();\n\n  return (\n    <tr\n      className={ClassNames('people-table__person',\n        {'people-table__person--active': slug === person.slug},\n        {'people-table__person--male': person.sex === 'm'},\n        {'people-table__person--female': person.sex === 'f'})}\n      id={person.slug}\n    >\n      <td className=\"people-table__person-info\">\n        <PersonName person={person} />\n      </td>\n      <td className=\"people-table__person-info\">{personSex}</td>\n      <td className=\"people-table__person-info\">{person.born}</td>\n      <td className=\"people-table__person-info\">{person.died}</td>\n      <td className=\"people-table__person-info\">\n        {!person.motherName ? (\n          <span>-</span>\n        ) : (\n          person.mother ? (\n            <PersonName person={person.mother} />\n         ) : (\n           <span>{person.motherName}</span>\n         )\n        )}\n      </td>\n      <td className=\"people-table__person-info\">\n        {!person.fatherName ? (\n          <span>-</span>\n        ) : (\n          person.father ? (\n            <PersonName person={person.father} />\n         ) : (\n           <span>{person.fatherName}</span>\n         )\n        )}\n      </td>\n    </tr>\n  )\n}\n\nexport default PersonRow;\n","import React from 'react';\nimport './TableHeaderRow.css';\n\ntype Props = {\n  headers: string[];\n}\n\nconst TableHeaderRow:React.FC<Props> = ({ headers }) => (\n  <tr className=\"people-table__header\">\n    {headers.map((header: string) => (\n      <td className=\"people-table__header-name\" key={header}>{header}</td>\n    ))}\n  </tr>\n)\n\nexport default TableHeaderRow;\n","import React from 'react';\nimport { ModifiedPerson } from '../../helpers/api';\nimport PersonRow from '../PersonRow/PersonRow';\nimport TableHeaderRow from '../TableHeaderRow/TableHeaderRow';\nimport './PeopleTable.css';\n\ntype Props = {\n  people: ModifiedPerson[];\n}\n\nconst PeopleTable:React.FC<Props> = ({ people }) => {\n  const headers = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\n  return (\n    <table className=\"people-table\">\n      <thead>\n        <TableHeaderRow headers={headers} />\n      </thead>\n      <tbody>\n        {people.map((person: ModifiedPerson) => (\n          <PersonRow person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default PeopleTable;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Person, ModifiedPerson, getPeople } from '../../helpers/api';\nimport PeopleTable from '../PeopleTable/PeopleTable';\nimport './PeoplePage.css';\n\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState<ModifiedPerson[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const filterQuery = searchParams.get('query') || '';\n\n  useEffect(() => {\n    const getPeopleFromServer = async () => {\n      setIsLoading(true);\n\n      try {\n        const peopleFromServer = await getPeople<Person>();\n\n        const modifiedPeople = peopleFromServer.map((person: Person) => ({\n          ...person,\n          father: peopleFromServer.find((father: Person) =>\n            father.name === person.fatherName),\n          mother: peopleFromServer.find((mother: Person) =>\n            mother.name === person.motherName),\n        }));\n\n        setPeople(modifiedPeople);\n      } catch {\n        setErrorMessage('Error');\n        setIsLoading(false);\n      }\n\n      setIsLoading(false);\n    }\n\n    getPeopleFromServer();\n  }, []);\n\n  const filterPeople = (filterQuery: string, people: ModifiedPerson[]) => (\n    people.filter(({ name, motherName, fatherName }) =>\n      (name + motherName + fatherName).toLowerCase().includes(filterQuery.toLowerCase())\n    )\n  );\n\n  const visiblePeople = useMemo(() => filterPeople(filterQuery, people),\n    [filterQuery, people]);\n\n  return (\n    <>\n      {isLoading && (\n        <p className=\"people-table__loading-mess\">Loading...</p>\n      )}\n      {!isLoading && (\n        <>\n          {errorMessage ? (\n            <p className=\"people-table__error-mess\">{errorMessage}</p>\n          ) : (\n            <PeopleTable people={visiblePeople} />\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default PeoplePage;\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport interface Person {\n  name: string;\n  sex: string;\n  born: number;\n  died: number;\n  fatherName: string;\n  motherName: string;\n  slug: string;\n}\n\nexport interface ModifiedPerson extends Person {\n  father?: Person;\n  mother?: Person;\n}\n\nexport const getPeople = <Person>(): Promise<Person[]> => {\n  return fetch(API_URL).then(response => response.json())\n}\n","import React from 'react';\n\nconst NotFoundPage = () => (\n  <h1>\n    Page not found\n  </h1>\n)\n\nexport default NotFoundPage;\n","import React, { useState, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { debounce } from '../../helpers/debounce';\nimport './PeopleFilter.css';\n\nconst PeopleFilter = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n  const [currentQuery, setCurrentQuery] = useState(query);\n\n  const updateQuery = useCallback(\n    debounce(\n      (query: string) => {\n        if (query) {\n          searchParams.set('query', query);\n        } else {\n          searchParams.delete('query');\n        }\n\n        history.replace('/people');\n        history.push({\n          search: searchParams.toString(),\n        });\n      }, 1000\n    ), []\n  );\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrentQuery(event.target.value);\n    updateQuery(event.target.value);\n  }\n\n  return (\n    <input\n      className=\"people-table__search-pannel\"\n      type=\"text\"\n      value={currentQuery}\n      onChange={handleInputChange}\n      placeholder=\"Search People...\"\n    />\n  )\n}\n\nexport default PeopleFilter;\n","export const debounce = <F extends (...args: any[]) => void>(\n  func: F,\n  delay: number\n) => {\n  let timerId: any;\n\n  return (...args: any[]) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n\n    timerId = setTimeout(func, delay, ...args);\n  };\n};\n","import React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport PeopleFilter from '../PeopleFilter/PeopleFilter';\nimport './Header.css'\n\nconst Header = () => (\n  <ul className=\"header__nav\">\n    <li className=\"nav__item\">\n      <NavLink to=\"/\" exact className=\"nav__link\">Home</NavLink>\n    </li>\n    <li className=\"nav__item\">\n      <NavLink to=\"/people\" className=\"nav__link\">People</NavLink>\n    </li>\n    <li className=\"nav__item nav__search-pannel\">\n      <Route path=\"/people/:slug?\" component={PeopleFilter} />\n    </li>\n  </ul>\n)\n\nexport default Header;\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport HomePage from './components/HomePage/HomePage';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\nimport NotFondPage from './components/NotFoundPage/NotFoundPage';\nimport Header from './components/Header/Header';\n\nimport './App.css';\n\nconst App = () => (\n\n  <div className=\"App\">\n    <Header />\n\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/people/:slug?\" component={PeoplePage} />\n      <Route component={NotFondPage} />\n\n      <Redirect from=\"/home\" to=\"/\"/>\n    </Switch>\n  </div>\n\n\n\n\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}