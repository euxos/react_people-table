{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/TableHeaderRow/TableHeaderRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","helpers/api.ts","components/NotFoundPage/NotFoundPage.tsx","components/PeopleFilter/PeopleFilter.tsx","helpers/debounce.ts","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["HomePage","PersonName","person","location","useLocation","searchParams","URLSearchParams","search","className","ClassNames","sex","to","pathname","slug","onClick","id","element","document","getElementById","scrollIntoView","behavior","block","handleClickOnName","name","PersonRow","personSex","useParams","born","died","motherName","mother","fatherName","father","TableHeaderRow","headers","history","useHistory","sortBy","get","sortOrder","useState","currentSortQuery","setCurrentSortQuery","currentColumn","setCurrentColumn","useEffect","handleClickOnHeader","event","sortQuery","currentTarget","getAttribute","toLowerCase","trigger","target","set","push","toString","map","header","key","includes","PeopleTable","people","PeoplePage","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","filterQuery","a","fetch","then","response","json","peopleFromServer","modifiedPeople","find","getPeopleFromServer","visiblePeople","useMemo","peopleCopy","filter","filterPeople","sort","currPerson","nextPerson","localeCompare","sortPeople","reverse","NotFoundPage","PeopleFilter","query","currentQuery","setCurrentQuery","updateQuery","useCallback","func","delay","timerId","clearTimeout","args","setTimeout","debounce","delete","type","value","onChange","placeholder","Header","exact","path","component","App","NotFondPage","from","ReactDOM","render"],"mappings":"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","file":"static/js/main.919bd734.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n  <h1>\n    Home page\n  </h1>\n)\n\nexport default HomePage;\n","import React from 'react';\nimport { ModifiedPerson } from '../../helpers/api';\nimport { Link, useLocation } from 'react-router-dom';\nimport ClassNames from 'classnames';\nimport './PersonName.css';\n\ntype Props = {\n  person: ModifiedPerson;\n}\n\nconst PersonName:React.FC<Props> = ({ person }) => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n\n  const handleClickOnName = (id: string) => {\n    const element = document.getElementById(id);\n    element?.scrollIntoView({behavior: \"smooth\", block: \"center\"});\n  }\n\n  return (\n    <Link\n      className={ClassNames('person__name',\n        {'person__name--female': person.sex === 'f'},\n        {'person__name--male': person.sex === 'm'}\n      )}\n      to={{\n        pathname: `/people/${person.slug}`,\n        search: `${searchParams}`,\n      }}\n      onClick={() => handleClickOnName(person.slug)}\n    >\n      {person.name}\n    </Link>\n  )\n}\n\nexport default PersonName;\n","import React from 'react';\nimport { ModifiedPerson } from '../../helpers/api';\nimport ClassNames from 'classnames';\nimport './PersonRow.css';\nimport PersonName from '../PersonName/PersonName';\nimport { useParams } from 'react-router-dom';\n\ntype Props = {\n  person: ModifiedPerson;\n}\n\nconst PersonRow:React.FC<Props> = ({ person }) => {\n  const personSex = person.sex === 'm' ? 'male' : 'female';\n  const { slug } = useParams();\n\n  return (\n    <tr\n      className={ClassNames('people-table__person',\n        {'people-table__person--active': slug === person.slug},\n        {'people-table__person--male': person.sex === 'm'},\n        {'people-table__person--female': person.sex === 'f'})}\n      id={person.slug}\n    >\n      <td className=\"people-table__person-info\">\n        <PersonName person={person} />\n      </td>\n      <td className=\"people-table__person-info\">{personSex}</td>\n      <td className=\"people-table__person-info\">{person.born}</td>\n      <td className=\"people-table__person-info\">{person.died}</td>\n      <td className=\"people-table__person-info\">\n        {!person.motherName ? (\n          <span>-</span>\n        ) : (\n          person.mother ? (\n            <PersonName person={person.mother} />\n         ) : (\n           <span>{person.motherName}</span>\n         )\n        )}\n      </td>\n      <td className=\"people-table__person-info\">\n        {!person.fatherName ? (\n          <span>-</span>\n        ) : (\n          person.father ? (\n            <PersonName person={person.father} />\n         ) : (\n           <span>{person.fatherName}</span>\n         )\n        )}\n      </td>\n    </tr>\n  )\n}\n\nexport default PersonRow;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ClassNames from 'classnames';\nimport './TableHeaderRow.css';\n\ntype Props = {\n  headers: string[];\n}\n\nconst TableHeaderRow: React.FC<Props> = ({ headers }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const [currentSortQuery, setCurrentSortQuery] = useState(sortBy);\n  const [currentColumn, setCurrentColumn] = useState<EventTarget>();\n\n  useEffect(() => {\n    setCurrentSortQuery(sortBy);\n  }, [sortBy]);\n\n  const handleClickOnHeader = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const sortQuery = event.currentTarget.getAttribute('id')?.toLowerCase() || '';\n    const trigger = currentColumn !== event.target;\n    setCurrentColumn(event.target);\n\n    if (sortOrder === 'desc' || !sortOrder\n      || trigger) {\n      searchParams.set('sortOrder', 'asc');\n    } else {\n      searchParams.set('sortOrder', 'desc');\n    }\n\n    searchParams.set('sortBy', sortQuery);\n\n    history.push({\n      search: searchParams.toString(),\n    })\n  }\n\n  return (\n    <tr className=\"people-table__headers\">\n      {headers.map((header: string) => (\n        <td className=\"people-table__headers-column\" key={header}>\n          {['Name', 'Sex', 'Born', 'Died'].includes(header)\n            ? <button\n              onClick={handleClickOnHeader}\n              className={ClassNames('people-table__sort-btn',\n                {\n                  'people-table__sort-btn--asc':\n                    currentSortQuery === header.toLowerCase()\n                    && searchParams.get('sortOrder') === 'asc'\n                },\n                {\n                  'people-table__sort-btn--desc':\n                    currentSortQuery === header.toLowerCase()\n                    && searchParams.get('sortOrder') === 'desc'\n                },\n              )}\n              id={header}\n            >\n              {header}\n            </button>\n            : <span className=\"people-table__header-name\">{header}</span>\n          }\n        </td>\n      ))}\n    </tr>\n  )\n}\n\nexport default TableHeaderRow;\n","import React from 'react';\nimport { ModifiedPerson } from '../../helpers/api';\nimport PersonRow from '../PersonRow/PersonRow';\nimport TableHeaderRow from '../TableHeaderRow/TableHeaderRow';\nimport './PeopleTable.css';\n\ntype Props = {\n  people: ModifiedPerson[];\n}\n\nconst PeopleTable:React.FC<Props> = ({ people }) => {\n  const headers = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\n  return (\n    <table className=\"people-table\">\n      <thead>\n        <TableHeaderRow headers={headers} />\n      </thead>\n      <tbody>\n        {people.map((person: ModifiedPerson) => (\n          <PersonRow person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default PeopleTable;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Person, ModifiedPerson, getPeople } from '../../helpers/api';\nimport PeopleTable from '../PeopleTable/PeopleTable';\nimport './PeoplePage.css';\n\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState<ModifiedPerson[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const filterQuery = searchParams.get('query') || '';\n  const sortQuery = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n\n  useEffect(() => {\n    const getPeopleFromServer = async () => {\n      setIsLoading(true);\n\n      try {\n        const peopleFromServer = await getPeople<Person>();\n\n        const modifiedPeople = peopleFromServer.map((person: Person) => ({\n          ...person,\n          father: peopleFromServer.find((father: Person) =>\n            father.name === person.fatherName),\n          mother: peopleFromServer.find((mother: Person) =>\n            mother.name === person.motherName),\n        }));\n\n        setPeople(modifiedPeople);\n      } catch {\n        setErrorMessage('Error');\n        setIsLoading(false);\n      }\n\n      setIsLoading(false);\n    }\n\n    getPeopleFromServer();\n  }, []);\n\n  const filterPeople = (filterQuery: string, people: ModifiedPerson[]) => (\n    people.filter(({ name, motherName, fatherName }) =>\n      (name + motherName + fatherName).toLowerCase().includes(filterQuery.toLowerCase())\n    )\n  );\n\n  const sortPeople = (sortQuery: string, people: ModifiedPerson[]) => {\n    switch (sortQuery) {\n      case 'name':\n        return [...people].sort((currPerson, nextPerson) => (\n          currPerson.name.localeCompare(nextPerson.name)\n        ));\n\n      case 'sex':\n        return [...people].sort((currPerson, nextPerson) => (\n          currPerson.sex.localeCompare(nextPerson.sex)\n        ));\n\n      case 'born':\n        return [...people].sort((currPerson, nextPerson) => (\n          currPerson.born - nextPerson.born\n        ));\n\n      case 'died':\n        return [...people].sort((currPerson, nextPerson) => (\n          currPerson.died - nextPerson.died\n        ));\n\n      default:\n        return people;\n    }\n  };\n\n  const visiblePeople = useMemo(() => {\n    let peopleCopy = [...people];\n\n    peopleCopy = filterPeople(filterQuery, peopleCopy);\n    peopleCopy = sortPeople(sortQuery, peopleCopy);\n\n    return sortOrder === 'desc' ? peopleCopy.reverse() : peopleCopy;\n  },\n    [sortOrder, sortQuery, filterQuery, people]);\n\n  return (\n    <>\n      {isLoading && (\n        <p className=\"people-table__loading-mess\">Loading...</p>\n      )}\n      {!isLoading && (\n        <>\n          {errorMessage ? (\n            <p className=\"people-table__error-mess\">{errorMessage}</p>\n          ) : (\n              <PeopleTable people={visiblePeople} />\n            )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default PeoplePage;\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport interface Person {\n  name: string;\n  sex: string;\n  born: number;\n  died: number;\n  fatherName: string;\n  motherName: string;\n  slug: string;\n}\n\nexport interface ModifiedPerson extends Person {\n  father?: Person;\n  mother?: Person;\n}\n\nexport const getPeople = <Person>(): Promise<Person[]> => {\n  return fetch(API_URL).then(response => response.json())\n}\n","import React from 'react';\n\nconst NotFoundPage = () => (\n  <h1>\n    Page not found\n  </h1>\n)\n\nexport default NotFoundPage;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { debounce } from '../../helpers/debounce';\nimport './PeopleFilter.css';\n\nconst PeopleFilter = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n  const [currentQuery, setCurrentQuery] = useState(query);\n\n  useEffect(() => {\n    setCurrentQuery(query);\n  }, [query]);\n\n  const updateQuery = useCallback(\n    debounce(\n      (query: string) => {\n        if (query) {\n          searchParams.set('query', query);\n        } else {\n          searchParams.delete('query');\n        }\n\n        history.push({\n          search: searchParams.toString(),\n        });\n      }, 1000\n    ), [searchParams]\n  );\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrentQuery(event.target.value);\n    updateQuery(event.target.value);\n  }\n\n  return (\n    <input\n      className=\"people-table__search-pannel\"\n      type=\"text\"\n      value={currentQuery}\n      onChange={handleInputChange}\n      placeholder=\"Search People...\"\n    />\n  )\n}\n\nexport default PeopleFilter;\n","export const debounce = <F extends (...args: any[]) => void>(\n  func: F,\n  delay: number\n) => {\n  let timerId: any;\n\n  return (...args: any[]) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n\n    timerId = setTimeout(func, delay, ...args);\n  };\n};\n","import React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport PeopleFilter from '../PeopleFilter/PeopleFilter';\nimport './Header.css'\n\nconst Header = () => (\n  <ul className=\"header__nav\">\n    <li className=\"nav__item\">\n      <NavLink to=\"/\" exact className=\"nav__link\">Home</NavLink>\n    </li>\n    <li className=\"nav__item\">\n      <NavLink to=\"/people\" className=\"nav__link\">People</NavLink>\n    </li>\n    <li className=\"nav__item nav__search-pannel\">\n      <Route path=\"/people/:slug?\" component={PeopleFilter} />\n    </li>\n  </ul>\n)\n\nexport default Header;\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport HomePage from './components/HomePage/HomePage';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\nimport NotFondPage from './components/NotFoundPage/NotFoundPage';\nimport Header from './components/Header/Header';\n\nimport './App.css';\n\nconst App = () => (\n\n  <div className=\"App\">\n    <Header />\n\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/people/:slug?\" component={PeoplePage} />\n      <Route component={NotFondPage} />\n\n      <Redirect from=\"/home\" to=\"/\"/>\n    </Switch>\n  </div>\n\n\n\n\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}